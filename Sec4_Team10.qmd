---
title: "Team 10"
format: html
editor: visual
---

```{r codeAppend, ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
      
```

## Clean Code

```{r}
# Load libraries
library(dplyr)
library(tidyr)
```

```{r}
suicide_data <- read.csv("C:/Users/hanzi/Downloads/Death_rates_for_suicide__by_sex__race__Hispanic_origin__and_age__United_States.csv")
drug_overdose_data <- read.csv("C:/Users/hanzi/Downloads/Drug_overdose_death_rates__by_drug_type__sex__age__race__and_Hispanic_origin__United_States.csv")
```

```{r}
colnames(suicide_data)
colnames(drug_overdose_data)
```


```{r}
head(suicide_data)
head(drug_overdose_data)
```
```{r}
# View structure
glimpse(suicide_data)
glimpse(drug_overdose_data)

# Display first few rows
head(suicide_data)
head(drug_overdose_data)
```

```{r}
unique(suicide_data$STUB_LABEL)
unique(suicide_data$STUB_NAME)
unique(suicide_data$AGE)
unique(drug_overdose_data$STUB_LABEL)
unique(drug_overdose_data$STUB_NAME)
unique(drug_overdose_data$AGE)
```

```{r}
# Clean the suicide dataset
suicide_clean <- suicide_data %>%
  mutate(
    Gender = case_when(
      grepl("Male", STUB_LABEL) ~ "Male",
      grepl("Female", STUB_LABEL) ~ "Female",
      TRUE ~ "All persons"
    ),
    Race = case_when(
      grepl("White", STUB_LABEL) ~ "White",
      grepl("Black or African American", STUB_LABEL) ~ "Black or African American",
      grepl("Asian or Pacific Islander", STUB_LABEL) ~ "Asian or Pacific Islander",
      grepl("American Indian or Alaska Native", STUB_LABEL) ~ "American Indian or Alaska Native",
      TRUE ~ "Unknown"
    )
  ) %>%
  select(
    Gender, 
    Race,
    Year = YEAR,
    Age_Group = AGE,
    Suicide_Rate = ESTIMATE
  ) %>%
  filter(Gender != "All persons") # Exclude general rows if needed

# Clean the drug overdose dataset
drug_overdose_clean <- drug_overdose_data %>%
  mutate(
    Gender = case_when(
      grepl("Male", STUB_LABEL) ~ "Male",
      grepl("Female", STUB_LABEL) ~ "Female",
      TRUE ~ "All persons"
    ),
    Race = case_when(
      grepl("White", STUB_LABEL) ~ "White",
      grepl("Black or African American", STUB_LABEL) ~ "Black or African American",
      grepl("Asian or Pacific Islander", STUB_LABEL) ~ "Asian or Pacific Islander",
      grepl("American Indian or Alaska Native", STUB_LABEL) ~ "American Indian or Alaska Native",
      TRUE ~ "Unknown"
    )
  ) %>%
  select(
    Gender,
    Race,
    Year = YEAR,
    Age_Group = AGE,
    Overdose_Rate = ESTIMATE
  ) %>%
  filter(Gender != "All persons") # Exclude general rows if needed
```


```{r}
# Check for missing data
sum(is.na(suicide_clean))
sum(is.na(drug_overdose_clean))

# Remove rows with missing data
suicide_clean <- suicide_clean %>% drop_na()
drug_overdose_clean <- drug_overdose_clean %>% drop_na()
```

```{r}
# Merge the two datasets
merged_data <- merge(
  suicide_clean,
  drug_overdose_clean,
  by = c("Gender", "Race", "Year", "Age_Group"),
  all = FALSE 
)

merged_data <- merged_data %>%
  filter(Race != "Unknown") %>% # Remove rows with unknown race
  select(-Age_Group, -Year)     # Drop the Age_Group and Year columns entirely

```

```{r}
write.csv(merged_data, "Cleaned_Combined_Death_Rates.csv", row.names = FALSE)
```

```{r}
summary(merged_data)

# Check unique values
table(merged_data$Gender)
table(merged_data$Race)
table(merged_data$Year)
table(merged_data$Age_Group)
```

```{r}
write.csv(
  merged_data,
  "C:/Users/hanzi/Downloads/Cleaned_Combined_Death_Rates.csv",
  row.names = FALSE
)

print("The cleaned and further filtered dataset has been saved successfully!")
```

## Exploratory Data Analysis (EDA)

```{r}
library(ggplot2)
# Bar chart: Death rates by gender and race
ggplot(data = merged_data, aes(x = Race, y = Suicide_Rate, fill = Gender)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    axis.title.x = element_text(size = 12, face = "bold"),
    axis.title.y = element_text(size = 12, face = "bold")
  ) +
  labs(
    title = "Suicide Rates by Race and Gender",
    x = "Race",
    y = "Suicide Rate",
    fill = "Gender"
  )
```



```{r}
# Scatter plot: Comparing suicide and overdose rates
ggplot(merged_data, aes(x = Suicide_Rate, y = Overdose_Rate, color = Gender)) +
  geom_point() +
  labs(title = "Comparison of Suicide and Overdose Rates",
       x = "Suicide Rate",
       y = "Overdose Rate",
       color = "Gender") +
  theme_minimal()
```

```{r}
# Load required library
library(tidyr)

# Transform data to long format
merged_data_long <- merged_data %>%
  pivot_longer(cols = c(Suicide_Rate, Overdose_Rate), 
               names_to = "Variable", 
               values_to = "Rate")

# Heatmap: Combined rates by race and gender
library(ggplot2)

ggplot(data = merged_data_long, aes(x = Race, y = Gender, fill = Rate)) +
  geom_tile(color = "white") +
  facet_wrap(~ Variable, scales = "free", ncol = 2) + # Adjust facets
  scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Rate") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Rotate and space x-axis labels
    axis.title.x = element_text(size = 12, face = "bold"),
    axis.title.y = element_text(size = 12, face = "bold"),
    strip.text = element_text(size = 12, face = "bold") # For facet titles
  ) +
  labs(
    title = "Heatmap of Suicide and Overdose Rates by Race and Gender",
    x = "Race",
    y = "Gender"
  )
```

```{r}
# Summarize the data by Race and Gender
summary_table <- merged_data %>%
  group_by(Race, Gender) %>%
  summarise(
    Avg_Suicide_Rate = mean(Suicide_Rate, na.rm = TRUE),
    Avg_Overdose_Rate = mean(Overdose_Rate, na.rm = TRUE)
  )

# Display the summary table
library(knitr)
kable(summary_table, 
      col.names = c("Race", "Gender", "Average Suicide Rate", "Average Overdose Rate"),
      caption = "Summary Table of Average Suicide and Overdose Rates by Race and Gender")
```

```{r}
# QQ Plot for Suicide Rate
qqnorm(merged_data$Suicide_Rate, main = "QQ Plot of Suicide Rate")
qqline(merged_data$Suicide_Rate, col = "red", lwd = 2)
library(ggplot2)

# QQ Plot for Suicide Rate
ggplot(merged_data, aes(sample = Suicide_Rate)) +
  stat_qq() +
  stat_qq_line(color = "red") +
  labs(
    title = "QQ Plot of Suicide Rate",
    x = "Theoretical Quantiles",
    y = "Sample Quantiles"
  ) +
  theme_minimal()
```

```{r}
#Correlation

# Load necessary libraries
library(dplyr)

# Assuming your dataset is `merged_data` with columns `Suicide_Rate`, `Overdose_Rate`, and `Race`

# Group by Race and calculate correlation for each racial group
correlation_results <- merged_data %>%
  group_by(Race) %>%
  summarize(
    correlation = cor(Suicide_Rate, Overdose_Rate, use = "complete.obs"),
    p_value = cor.test(Suicide_Rate, Overdose_Rate, use = "complete.obs")$p.value
  )

# Print the correlation results
print(correlation_results)


```
```{r}

```






